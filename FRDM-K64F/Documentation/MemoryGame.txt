=============================================================================
List of generated methods in project: MemoryGame

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "Pins1"     (component PinSettings)

Module "SM1"       (component SPIMaster_LDD)
   - SM1_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets 
                interrupt priority, sets pin routing, sets timing, etc.   If the "Enable in init. code" is set to "yes" value 
                then the device is also enabled(see the description of the Enable() method). In this case the Enable() method 
                is not necessary and needn't to be generated.    This method can be called only once. Before the second call of 
                Init() the Deinit() must be called first.
   - SM1_SendBlock -Sends a block of characters. The method returns ERR_BUSY when the previous block transmission is not 
                completed. The method <CancelBlockTransmission> can be used to cancel a transmit operation. This method 
                finishes immediately after calling it - it doesn't wait the end of data transmission. Use event <OnBlockSent> 
                to check the end of data transmission or method GetSentDataNum to check the state of sending.
   - SM1_ReceiveBlock -This method specifies the number of data to receive. The method returns ERR_BUSY until the specified 
                number of characters is received. The method <CancelBlockReception> can be used to cancel a running receive 
                operation. If a receive operation is not in progress (the method was not called or a previous operation has 
                already finished) all received characters will be lost without any notification. To prevent the loss of data 
                call the method immediately after the last receive operation has finished (e.g. from the <OnBlockReceived> 
                event). This method finishes immediately after calling it - it doesn't wait the end of data reception. Use 
                event <OnBlockReceived> to check the end of data reception or method GetReceivedDataNum to check the state of 
                receiving.

Module "Cpu"       (component MK64FN1M0LL12)
   - Cpu_SetClockConfiguration -Calling of this method will cause the clock configuration change and reconfiguration of all 
                components according to the requested clock configuration setting.
   - Cpu_GetClockConfiguration -Returns the active clock configuration identifier. The method is automatically enabled if more 
                than one clock configuration is enabled in the component.

===================================================================================
